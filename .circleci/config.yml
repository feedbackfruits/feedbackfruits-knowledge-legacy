defaults: &defaults
  working_directory: ~/feedbackfruits-knowledge
  docker:
    - image: node:8.5.0
      environment:
        NODE_ENV: test
        ELASTICSEARCH_AUTOCOMPLETE_INDEX: test_knowledge_autocomplete_search
        ELASTICSEARCH_SEARCH_INDEX: test_knowledge_resources_search
    - image: elasticsearch:5-alpine
      environment:
        ES_JAVA_OPTS: -Xms512m -Xmx1024m
    - image: quay.io/cayleygraph/cayley:latest
    - image: redis

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

      - run:
          name: Install yarn 1.6.0
          command: npm install --global yarn@1.6.0

      - run:
          name: Install dependencies
          command: yarn install

      - run:
          name: install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for ElasticSearch
          command: dockerize -wait http://localhost:9200 -timeout 1m

      - run:
          name: Wait for Cayley
          command: dockerize -wait http://localhost:64210 -timeout 1m

      - run:
          name: Seed Elasticsearch
          command: |
            sleep 10
            curl --retry 2 --retry-delay 2 -H "Content-Type: application/x-ndjson" -XPUT --data-binary @seeds/elasticsearch-mapping-autocomplete.json localhost:9200/test_knowledge_autocomplete_search
            curl --retry 2 --retry-delay 2 -H "Content-Type: application/x-ndjson" -XPUT --data-binary @seeds/elasticsearch-mapping-resources.json localhost:9200/test_knowledge_resources_search
            curl --retry 2 --retry-delay 2 -H "Content-Type: application/x-ndjson" -XPOST --data-binary @seeds/elasticsearch.ndjson localhost:9200/_bulk

      - run:
          name: Seed Cayley
          command: |
            sleep 10 && curl --retry 2 --retry-delay 2 -H "Content-Type: multipart/form-data" -XPOST -F NQuadFile=@seeds/cayley.nq localhost:64210/api/v1/write/file/nquad

      - save_cache:
          paths:
            - node_modules
          key: node_modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

      - run: yarn test
      - run: yarn run coverage

      - store_artifacts:
          path: coverage
  deploy-branch:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Prepare deployment
          command: |
            # Run credentials script as default user
            bash .circleci/setup-heroku-credentials.sh
      - deploy:
          name: Deploy to Heroku
          command: |
            ssh-keyscan -H heroku.com >> ~/.ssh/known_hosts
            git push git@heroku.com:staging-fbf-knowledge.git $CIRCLE_SHA1:refs/heads/master -f
  deploy-tag:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Prepare deployment
          command: |
            # Run credentials script as default user
            bash .circleci/setup-heroku-credentials.sh
      - deploy:
          name: Deploy to Heroku
          command: |
            ssh-keyscan -H heroku.com >> ~/.ssh/known_hosts
            git push git@heroku.com:feedbackfruits-knowledge.git $CIRCLE_SHA1:refs/heads/master -f
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - deploy-branch:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - deploy-tag:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
